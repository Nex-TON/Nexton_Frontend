{"version":3,"file":"index-121ce3a9.js","sources":["../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/node_modules/react/jsx-runtime.js","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/src/utils/web.ts","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/src/components/TonConnectUIProvider.tsx","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/src/errors/ton-connect-ui-react.error.ts","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/src/errors/ton-connect-provider-not-set.error.ts","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/src/hooks/useTonConnectUI.ts","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/src/utils/errors.ts","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/src/components/TonConnectButton.tsx","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/src/hooks/useTonWallet.ts","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/src/hooks/useIsConnectionRestored.ts","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/src/hooks/useTonAddress.ts","../node_modules/.pnpm/@tonconnect+ui-react@2.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tonconnect/ui-react/src/hooks/useTonConnectModal.ts"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","export function isClientSide(): boolean {\n    return typeof window !== 'undefined';\n}\n\nexport function isServerSide(): boolean {\n    return !isClientSide();\n}\n","import { createContext, FunctionComponent, memo, ReactNode } from 'react';\nimport {\n    ActionConfiguration,\n    Locales,\n    TonConnectUI,\n    UIPreferences,\n    WalletsListConfiguration\n} from '@tonconnect/ui';\nimport type { ITonConnect } from '@tonconnect/ui';\nimport { isClientSide } from '../utils/web';\n\nexport const TonConnectUIContext = createContext<TonConnectUI | null>(null);\n\nexport type TonConnectUIProviderProps = {\n    children: ReactNode;\n} & Partial<TonConnectUIProviderPropsBase> &\n    Partial<TonConnectUIProviderPropsWithManifest | TonConnectUIProviderPropsWithConnector>;\n\nexport interface TonConnectUIProviderPropsWithManifest {\n    /**\n     * Url to the [manifest]{@link https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest} with the Dapp metadata that will be displayed in the user's wallet.\n     * If not passed, manifest from `${window.location.origin}/tonconnect-manifest.json` will be taken.\n     */\n    manifestUrl: string;\n}\n\nexport interface TonConnectUIProviderPropsWithConnector {\n    /**\n     * TonConnect instance. Can be helpful if you use custom ITonConnect implementation, or use both of @tonconnect/sdk and @tonconnect/ui in your app.\n     */\n    connector: ITonConnect;\n}\n\nexport interface TonConnectUIProviderPropsBase {\n    /**\n     * Try to restore existing session and reconnect to the corresponding wallet.\n     * @default true.\n     */\n    restoreConnection: boolean;\n\n    /**\n     * Language for the phrases it the UI elements.\n     * @default system\n     */\n    language: Locales;\n\n    /**\n     * HTML element id to attach the modal window element. If not passed, `div#tc-widget-root` in the end of the <body> will be added and used.\n     * @default `div#tc-widget-root`.\n     */\n    widgetRootId: string;\n\n    /**\n     * UI elements configuration.\n     */\n    uiPreferences?: UIPreferences;\n\n    /**\n     * Configuration for the wallets list in the connect wallet modal.\n     */\n    walletsListConfiguration?: WalletsListConfiguration;\n\n    /**\n     * Configuration for action-period (e.g. sendTransaction) UI elements: modals and notifications and wallet behaviour (return strategy).\n     */\n    actionsConfiguration?: ActionConfiguration;\n\n    /**\n     * Specifies whether the Android back button should be used to close modals and notifications on Android devices.\n     * @default true\n     */\n    enableAndroidBackHandler?: boolean;\n}\n\nlet tonConnectUI: TonConnectUI | null = null;\n\n/**\n * Add TonConnectUIProvider to the root of the app. You can specify UI options using props.\n * All TonConnect UI hooks calls and `<TonConnectButton />` component must be placed inside `<TonConnectUIProvider>`.\n * @param children JSX to insert.\n * @param [options] additional options.\n * @constructor\n */\nconst TonConnectUIProvider: FunctionComponent<TonConnectUIProviderProps> = ({\n    children,\n    ...options\n}) => {\n    if (isClientSide() && !tonConnectUI) {\n        tonConnectUI = new TonConnectUI(options);\n    }\n\n    return (\n        <TonConnectUIContext.Provider value={tonConnectUI}>{children}</TonConnectUIContext.Provider>\n    );\n};\n\nexport default memo(TonConnectUIProvider);\n","import { TonConnectUIError } from '@tonconnect/ui';\n\n/**\n * Base class for TonConnectUIReact errors. You can check if the error was triggered by the @tonconnect/ui-react using `err instanceof TonConnectUIReactError`.\n */\nexport class TonConnectUIReactError extends TonConnectUIError {\n    constructor(...args: ConstructorParameters<typeof Error>) {\n        super(...args);\n\n        Object.setPrototypeOf(this, TonConnectUIReactError.prototype);\n    }\n}\n","import { TonConnectUIReactError } from './ton-connect-ui-react.error';\n\n/**\n * Thrown when either <TonConnectProvider> not added to the top of the tags tree,\n * either there is an attempt using TonConnect UI hook or <TonConnectButton> inside <TonConnectProvider>\n */\nexport class TonConnectProviderNotSetError extends TonConnectUIReactError {\n    constructor(...args: ConstructorParameters<typeof Error>) {\n        super(...args);\n\n        Object.setPrototypeOf(this, TonConnectProviderNotSetError.prototype);\n    }\n}\n","import { useCallback, useContext } from 'react';\nimport { TonConnectUIContext } from '../components/TonConnectUIProvider';\nimport { TonConnectUI, TonConnectUiOptions } from '@tonconnect/ui';\nimport { checkProvider } from '../utils/errors';\nimport { isServerSide } from '../utils/web';\n\n/**\n * Use it to get access to the `TonConnectUI` instance and UI options updating function.\n */\nexport function useTonConnectUI(): [TonConnectUI, (options: TonConnectUiOptions) => void] {\n    const tonConnectUI = useContext(TonConnectUIContext);\n    const setOptions = useCallback(\n        (options: TonConnectUiOptions) => {\n            if (tonConnectUI) {\n                tonConnectUI!.uiOptions = options;\n            }\n        },\n        [tonConnectUI]\n    );\n\n    if (isServerSide()) {\n        return [null as unknown as TonConnectUI, () => {}];\n    }\n\n    checkProvider(tonConnectUI);\n    return [tonConnectUI!, setOptions];\n}\n","import { TonConnectUI } from '@tonconnect/ui';\nimport { TonConnectProviderNotSetError } from '../errors/ton-connect-provider-not-set.error';\n\nexport function checkProvider(provider: TonConnectUI | null): provider is TonConnectUI {\n    if (!provider) {\n        throw new TonConnectProviderNotSetError(\n            'You should add <TonConnectUIProvider> on the top of the app to use TonConnect'\n        );\n    }\n\n    return true;\n}\n","import { CSSProperties, FunctionComponent, memo, useEffect } from 'react';\nimport { useTonConnectUI } from '../hooks/useTonConnectUI';\n\nconst buttonRootId = 'ton-connect-button';\n\nexport interface TonConnectButtonProps {\n    className?: string;\n\n    style?: CSSProperties;\n}\n\n/**\n * TonConnect Button is universal UI component for initializing connection. After wallet is connected it transforms to a wallet menu.\n * It is recommended to place it in the top right corner of your app.\n * @param [className] css class to add to the button container.\n * @param [style] style to add to the button container.\n * @constructor\n */\nconst TonConnectButton: FunctionComponent<TonConnectButtonProps> = ({ className, style }) => {\n    const [_, setOptions] = useTonConnectUI();\n\n    useEffect(() => {\n        setOptions({ buttonRootId });\n        return () => setOptions({ buttonRootId: null });\n    }, [setOptions]);\n\n    return (\n        <div\n            id={buttonRootId}\n            className={className}\n            style={{ width: 'fit-content', ...style }}\n        ></div>\n    );\n};\n\nexport default memo(TonConnectButton);\n","import { useEffect, useState } from 'react';\nimport { ConnectedWallet, Wallet, WalletInfoWithOpenMethod } from '@tonconnect/ui';\nimport { useTonConnectUI } from './useTonConnectUI';\n\n/**\n * Use it to get user's current ton wallet. If wallet is not connected hook will return null.\n */\nexport function useTonWallet(): Wallet | (Wallet & WalletInfoWithOpenMethod) | null {\n    const [tonConnectUI] = useTonConnectUI();\n    const [wallet, setWallet] = useState<Wallet | (Wallet & WalletInfoWithOpenMethod) | null>(\n        tonConnectUI?.wallet || null\n    );\n\n    useEffect(() => {\n        if (tonConnectUI) {\n            setWallet(tonConnectUI.wallet);\n            return tonConnectUI.onStatusChange((value: ConnectedWallet | null) => {\n                setWallet(value);\n            });\n        }\n    }, [tonConnectUI]);\n\n    return wallet;\n}\n","import { useEffect, useState } from 'react';\nimport { useTonConnectUI } from './useTonConnectUI';\n\n/**\n * Indicates current status of the connection restoring process.\n */\nexport function useIsConnectionRestored(): boolean {\n    const [restored, setRestored] = useState(false);\n    const [tonConnectUI] = useTonConnectUI();\n\n    useEffect(() => {\n        if (tonConnectUI) {\n            tonConnectUI.connectionRestored.then(() => setRestored(true));\n        }\n    }, [tonConnectUI]);\n\n    return restored;\n}\n","import { CHAIN, toUserFriendlyAddress } from '@tonconnect/ui';\nimport { useTonWallet } from './useTonWallet';\nimport { useMemo } from 'react';\n\n/**\n * Use it to get user's current ton wallet address. If wallet is not connected hook will return empty string.\n * @param [userFriendly=true] allows to choose format of the address.\n */\nexport function useTonAddress(userFriendly = true): string {\n    const wallet = useTonWallet();\n    return useMemo(() => {\n        if (wallet) {\n            return userFriendly\n                ? toUserFriendlyAddress(\n                      wallet.account.address,\n                      wallet.account.chain === CHAIN.TESTNET\n                  )\n                : wallet.account.address;\n        } else {\n            return '';\n        }\n    }, [wallet, userFriendly, wallet?.account.address, wallet?.account.chain]);\n}\n","import { WalletsModal, WalletsModalState } from '@tonconnect/ui';\nimport { useTonConnectUI } from './useTonConnectUI';\nimport { useEffect, useState } from 'react';\n\n/**\n * Use it to get access to the open/close modal functions.\n */\nexport function useTonConnectModal(): Omit<WalletsModal, 'onStateChange'> {\n    const [tonConnectUI] = useTonConnectUI();\n    const [state, setState] = useState(tonConnectUI?.modal.state || null);\n\n    useEffect(() => {\n        if (tonConnectUI) {\n            setState(tonConnectUI.modal.state);\n            return tonConnectUI.onModalStateChange((value: WalletsModalState) => {\n                setState(value);\n            });\n        }\n    }, [tonConnectUI]);\n\n    return {\n        state: state,\n        open: () => tonConnectUI?.modal.open(),\n        close: () => tonConnectUI?.modal.close()\n    };\n}\n"],"names":["exports","f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","isClientSide","window","TonConnectUIContext","createContext","tonConnectUI","TonConnectUIProvider$1","memo","_a","children","_b","options","TonConnectUI","Provider","value","TonConnectUIReactError","TonConnectUIError","[object Object]","args","setPrototypeOf","this","TonConnectProviderNotSetError","useTonConnectUI","useContext","setOptions","useCallback","uiOptions","provider","TonConnectButton$1","className","style","_","buttonRootId","id","__spreadValues","width","useTonWallet","wallet","setWallet","useState","onStatusChange","restored","setRestored","connectionRestored","then","userFriendly","useMemo","toUserFriendlyAddress","account","address","chain","CHAIN","TESTNET","state","setState","modal","onModalStateChange","open","close"],"mappings":"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"}