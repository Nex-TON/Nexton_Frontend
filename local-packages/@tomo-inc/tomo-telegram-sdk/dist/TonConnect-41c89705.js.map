{"version":3,"file":"TonConnect-41c89705.js","sources":["../src/hooks/useTonConnect.ts","../src/components/TonConnect.tsx"],"sourcesContent":["import { useTonConnectModal, useTonConnectUI } from '@tonconnect/ui-react';\nimport { useEffect, useState } from 'react';\nimport { useProxyLocalStorage } from '../v2/ProxyLocalStorage';\nimport { getTonBalance } from '../config/ton';\nimport { ConnectResult } from '../TomoContext';\n\ninterface Option {\n  connectSuccess?: () => void;\n  connectError?: () => void;\n  setProviders: (providers: Record<string, any>) => void;\n  // chain?: string;\n  setConnectResult?: (result: ConnectResult) => void;\n}\n\nconst useTonConnect = (option: Option) => {\n  const { connectSuccess, connectError, setProviders, setConnectResult } =\n    option || {};\n  const [tonConnectUI] = useTonConnectUI();\n  const { open } = useTonConnectModal();\n\n  const storage = useProxyLocalStorage();\n\n  const connect = async (connectParams?: { tonProof?: string }) => {\n    if (connectParams?.tonProof) {\n      tonConnectUI.setConnectRequestParameters({\n        state: 'ready',\n        value: { tonProof: connectParams.tonProof },\n      });\n    }\n    open();\n    return 'connect';\n  };\n\n  const connectType = storage.get('connect_type');\n\n  useEffect(() => {\n    if (connectType === 'TON' && !tonConnectUI.connected) {\n      disconnect();\n    }\n  }, [tonConnectUI.connected, connectType]);\n\n  const disconnect = async () => {\n    setProviders(pre => ({ ...pre, tomo_ton: null }));\n    storage.set('accounts', {\n      ...(storage.get('accounts') || {}),\n      ton: undefined,\n    });\n    window.tomo_ton = null;\n    storage.set('connect_type', '');\n  };\n\n  useEffect(() => {\n    if (tonConnectUI.connected && tonConnectUI.account?.address) {\n      // is connected\n      connectSuccess && connectSuccess();\n      const account = tonConnectUI.account;\n      storage.set('accounts', {\n        ...(storage.get('accounts') || {}),\n        ton: account,\n      });\n      storage.set('connect_type', 'TON');\n      Object.defineProperty(tonConnectUI, 'getBalance', {\n        value: async () => getTonBalance({ tonAddress: account.address }),\n        writable: true,\n        enumerable: true,\n        configurable: false,\n      });\n      window.tomo_ton = tonConnectUI;\n      setProviders &&\n        setProviders(pre => ({\n          ...(pre || {}),\n          tomo_ton: tonConnectUI,\n        }));\n    }\n  }, [tonConnectUI.connected, tonConnectUI.account?.address]);\n\n  useEffect(() => {\n    const unsub = tonConnectUI.onStatusChange((wallet) => {\n      if (\n        wallet?.connectItems?.tonProof &&\n        \"proof\" in wallet.connectItems.tonProof\n      ) {\n        setConnectResult({\n          result: { tonProof: wallet.connectItems.tonProof },\n        });\n      }\n    });\n    return () => {\n      unsub()\n    }\n  }, [tonConnectUI]);\n\n  return {\n    connect,\n    disconnect,\n    connected: tonConnectUI?.connected || false,\n  };\n};\n\nexport default useTonConnect;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport useTonConnect from '../hooks/useTonConnect';\nimport { ConnectResult } from '../TomoContext';\n\n/**\n * useTonConnect hook --> TonConnect component\n * just for lazy load\n */\ninterface IProps {\n  closeModal: () => void;\n  setProviders: (providers: Record<string, any>) => void;\n  setConnectResult?: (result: ConnectResult) => void;\n  updateTonConnect: (obj: {\n    connect: (connectParams?: { tonProof?: string }) => Promise<string>;\n    connected: boolean;\n  }) => void;\n}\n\nconst TonConnect = ({\n  closeModal,\n  setProviders,\n  setConnectResult,\n  updateTonConnect,\n}: IProps) => {\n  const { connect, connected } = useTonConnect({\n    connectSuccess: closeModal,\n    setProviders,\n    setConnectResult,\n  });\n\n  useEffect(() => {\n    updateTonConnect({ connect, connected });\n  }, [connect, connected]);\n\n  // lazy load and connect immediately\n  useEffect(() => {\n    connect();\n  }, []);\n\n  return <></>;\n};\n\nexport default TonConnect;\n"],"names":["useTonConnect","option","_ref","connectSuccess","setProviders","setConnectResult","_useTonConnectUI","useTonConnectUI","tonConnectUI","_useTonConnectModal","useTonConnectModal","open","storage","useProxyLocalStorage","connect","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","connectParams","wrap","_callee$","_context","prev","next","tonProof","setConnectRequestParameters","state","value","abrupt","stop","_x","apply","arguments","connectType","get","useEffect","connected","disconnect","_ref3","_callee2","_callee2$","_context2","pre","_extends","tomo_ton","set","ton","undefined","window","_tonConnectUI$account","account","address","Object","defineProperty","_value","_callee3","_callee3$","_context3","getTonBalance","tonAddress","writable","enumerable","configurable","_tonConnectUI$account2","unsub","onStatusChange","wallet","_wallet$connectItems","connectItems","result","TonConnect","closeModal","updateTonConnect","_useTonConnect","React"],"mappings":"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"}